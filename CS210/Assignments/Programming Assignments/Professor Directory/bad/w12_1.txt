Java - EvenStack

Warning: Submitting this assignment will overwrite W11Main.java in your home
directory.

Create a file called EvenStack.Java. In it create a class EvenStack.

EvenStack must have 3 methods:
   public void push(int e)
   public int pop() 
   @Override
   public String toString()

EvenStack is like most stacks. It takes in integers. The first inieger pushed in
is the laste one popped out, but EvenStack has one odd feature: all the even 
integers that are pushed (like 4, 36 or 2) get popped before any odd integer
get popped even if an odd integer is pushed after the even ones. Other than 
that it maintains the order.

The toString method prints out the elements in the form [e1, e2, ... en], but
it prints them in the order they would be popped (not the order that they
were pushed).

You are free to implement your EvenStack any way you want, as long as you do not
use a Stack library from Java. 

The stack itself holds 10 elements. If you try to push to a full stack it must 
give the error:
Error: EvenStack is full
If you try to pop from a stack that is empty it must give the error:
Error: EvenStack is empty

Beyond that the only other thing that it should print is a confirmation when 
you push an element. For example push(35) should report:
Pushing: 35

Remember, you have limited space for compiling and runnign your program, so do 
not make your class too complex.  
