Terminals unused in grammar

   CHSIGN
   SIZEOF
   ERROR
   LASTTERM


State 0 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: precomList declList

    2 precomList: precomList PRECOMPILER
    3           | PRECOMPILER
    4           | %empty

    5 declList: declList decl
    6         | decl

    7 decl: varDecl
    8     | funDecl

    9 varDecl: typeSpec varDeclList ';'

   10 scopedVarDecl: STATIC typeSpec varDeclList ';'
   11              | typeSpec varDeclList ';'

   12 varDeclList: varDeclList ',' varDeclInit
   13            | varDeclInit

   14 varDeclInit: varDeclId
   15            | varDeclId ':' simpleExp

   16 varDeclId: ID
   17          | ID '[' NUMCONST ']'

   18 typeSpec: INT
   19         | BOOL
   20         | CHAR

   21 funDecl: typeSpec ID '(' parms ')' stmt
   22        | ID '(' parms ')' stmt
   23        | typeSpec error
   24        | typeSpec ID '(' error
   25        | ID '(' error
   26        | typeSpec ID '(' parms ')' error

   27 parms: parmList
   28      | %empty

   29 parmList: parmList ';' parmTypeList
   30         | parmTypeList

   31 parmTypeList: typeSpec parmIdList

   32 parmIdList: parmIdList ',' parmId
   33           | parmId

   34 parmId: ID
   35       | ID '[' ']'

   36 stmt: matched
   37     | unmatched

   38 matched: IF simpleExp THEN matched ELSE matched
   39        | WHILE simpleExp DO matched
   40        | FOR ID '=' iterRange DO matched
   41        | expStmt
   42        | compoundStmt
   43        | returnStmt
   44        | breakStmt

   45 iterRange: simpleExp TO simpleExp
   46          | simpleExp TO simpleExp BY simpleExp

   47 unmatched: IF simpleExp THEN stmt
   48          | IF simpleExp THEN matched ELSE unmatched
   49          | WHILE simpleExp DO unmatched
   50          | FOR ID '=' iterRange DO unmatched

   51 expStmt: exp ';'
   52        | ';'
   53        | exp error

   54 compoundStmt: '{' localDecls stmtList '}'

   55 localDecls: localDecls scopedVarDecl
   56           | %empty

   57 stmtList: stmtList stmt
   58         | %empty

   59 returnStmt: RETURN ';'
   60           | RETURN exp ';'

   61 breakStmt: BREAK ';'

   62 exp: mutable assignop exp
   63    | mutable INC
   64    | mutable DEC
   65    | simpleExp

   66 assignop: '='
   67         | ADDASS
   68         | SUBASS
   69         | MULASS
   70         | DIVASS

   71 simpleExp: simpleExp OR andExp
   72          | andExp

   73 andExp: andExp AND unaryRelExp
   74       | unaryRelExp

   75 unaryRelExp: NOT unaryRelExp
   76            | relExp

   77 relExp: minmaxExp relop minmaxExp
   78       | minmaxExp

   79 relop: LEQ
   80      | '<'
   81      | '>'
   82      | GEQ
   83      | EQ
   84      | NEQ

   85 minmaxExp: minmaxExp minmaxop sumExp
   86          | sumExp

   87 minmaxop: MAX
   88         | MIN

   89 sumExp: sumExp sumop mulExp
   90       | mulExp

   91 sumop: '+'
   92      | '-'

   93 mulExp: mulExp mulop unaryExp
   94       | unaryExp

   95 mulop: '*'
   96      | '/'
   97      | '%'

   98 unaryExp: unaryop unaryExp
   99         | factor

  100 unaryop: '-'
  101        | '*'
  102        | '?'

  103 factor: immutable
  104       | mutable

  105 mutable: ID
  106        | ID '[' exp ']'

  107 immutable: '(' exp ')'
  108          | call
  109          | constant
  110          | '(' error

  111 call: ID '(' args ')'
  112     | ID '(' error ')'

  113 args: argList
  114     | %empty

  115 argList: argList ',' exp
  116        | exp
  117        | argList ',' error

  118 constant: NUMCONST
  119         | CHARCONST
  120         | STRINGCONST
  121         | BOOLCONST


Terminals, with rules where they appear

$end (0) 0
'%' (37) 97
'(' (40) 21 22 24 25 26 107 110 111 112
')' (41) 21 22 26 107 111 112
'*' (42) 95 101
'+' (43) 91
',' (44) 12 32 115 117
'-' (45) 92 100
'/' (47) 96
':' (58) 15
';' (59) 9 10 11 29 51 52 59 60 61
'<' (60) 80
'=' (61) 40 50 66
'>' (62) 81
'?' (63) 102
'[' (91) 17 35 106
']' (93) 17 35 106
'{' (123) 54
'}' (125) 54
error (256) 23 24 25 26 53 110 112 117
MAX (258) 87
MIN (259) 88
ADDASS (260) 67
SUBASS (261) 68
MULASS (262) 69
DIVASS (263) 70
INC (264) 63
DEC (265) 64
CHSIGN (266)
SIZEOF (267)
EQ (268) 83
NEQ (269) 84
GEQ (270) 82
LEQ (271) 79
AND (272) 73
OR (273) 71
NOT (274) 75
BREAK (275) 61
FOR (276) 40 50
WHILE (277) 39 49
DO (278) 39 40 49 50
TO (279) 45 46
BY (280) 46
IF (281) 38 47 48
THEN (282) 38 47 48
ELSE (283) 38 48
INT (284) 18
BOOL (285) 19
CHAR (286) 20
STATIC (287) 10
RETURN (288) 59 60
PRECOMPILER (289) 2 3
ID (290) 16 17 21 22 24 25 26 34 35 40 50 105 106 111 112
BOOLCONST (291) 121
NUMCONST (292) 17 118
CHARCONST (293) 119
STRINGCONST (294) 120
ERROR (295)
LASTTERM (296)


Nonterminals, with rules where they appear

$accept (60)
    on left: 0
program (61)
    on left: 1, on right: 0
precomList (62)
    on left: 2 3 4, on right: 1 2
declList (63)
    on left: 5 6, on right: 1 5
decl (64)
    on left: 7 8, on right: 5 6
varDecl (65)
    on left: 9, on right: 7
scopedVarDecl (66)
    on left: 10 11, on right: 55
varDeclList (67)
    on left: 12 13, on right: 9 10 11 12
varDeclInit (68)
    on left: 14 15, on right: 12 13
varDeclId (69)
    on left: 16 17, on right: 14 15
typeSpec (70)
    on left: 18 19 20, on right: 9 10 11 21 23 24 26 31
funDecl (71)
    on left: 21 22 23 24 25 26, on right: 8
parms (72)
    on left: 27 28, on right: 21 22 26
parmList (73)
    on left: 29 30, on right: 27 29
parmTypeList (74)
    on left: 31, on right: 29 30
parmIdList (75)
    on left: 32 33, on right: 31 32
parmId (76)
    on left: 34 35, on right: 32 33
stmt (77)
    on left: 36 37, on right: 21 22 47 57
matched (78)
    on left: 38 39 40 41 42 43 44, on right: 36 38 39 40 48
iterRange (79)
    on left: 45 46, on right: 40 50
unmatched (80)
    on left: 47 48 49 50, on right: 37 48 49 50
expStmt (81)
    on left: 51 52 53, on right: 41
compoundStmt (82)
    on left: 54, on right: 42
localDecls (83)
    on left: 55 56, on right: 54 55
stmtList (84)
    on left: 57 58, on right: 54 57
returnStmt (85)
    on left: 59 60, on right: 43
breakStmt (86)
    on left: 61, on right: 44
exp (87)
    on left: 62 63 64 65, on right: 51 53 60 62 106 107 115 116
assignop (88)
    on left: 66 67 68 69 70, on right: 62
simpleExp (89)
    on left: 71 72, on right: 15 38 39 45 46 47 48 49 65 71
andExp (90)
    on left: 73 74, on right: 71 72 73
unaryRelExp (91)
    on left: 75 76, on right: 73 74 75
relExp (92)
    on left: 77 78, on right: 76
relop (93)
    on left: 79 80 81 82 83 84, on right: 77
minmaxExp (94)
    on left: 85 86, on right: 77 78 85
minmaxop (95)
    on left: 87 88, on right: 85
sumExp (96)
    on left: 89 90, on right: 85 86 89
sumop (97)
    on left: 91 92, on right: 89
mulExp (98)
    on left: 93 94, on right: 89 90 93
mulop (99)
    on left: 95 96 97, on right: 93
unaryExp (100)
    on left: 98 99, on right: 93 94 98
unaryop (101)
    on left: 100 101 102, on right: 98
factor (102)
    on left: 103 104, on right: 99
mutable (103)
    on left: 105 106, on right: 62 63 64 104
immutable (104)
    on left: 107 108 109 110, on right: 103
call (105)
    on left: 111 112, on right: 108
args (106)
    on left: 113 114, on right: 111
argList (107)
    on left: 115 116 117, on right: 113 115 117
constant (108)
    on left: 118 119 120 121, on right: 109


State 0

    0 $accept: . program $end

    PRECOMPILER  shift, and go to state 1

    PRECOMPILER  [reduce using rule 4 (precomList)]
    $default     reduce using rule 4 (precomList)

    program     go to state 2
    precomList  go to state 3


State 1

    3 precomList: PRECOMPILER .

    $default  reduce using rule 3 (precomList)


State 2

    0 $accept: program . $end

    $end  shift, and go to state 4


State 3

    1 program: precomList . declList
    2 precomList: precomList . PRECOMPILER

    INT          shift, and go to state 5
    BOOL         shift, and go to state 6
    CHAR         shift, and go to state 7
    PRECOMPILER  shift, and go to state 8
    ID           shift, and go to state 9

    declList  go to state 10
    decl      go to state 11
    varDecl   go to state 12
    typeSpec  go to state 13
    funDecl   go to state 14


State 4

    0 $accept: program $end .

    $default  accept


State 5

   18 typeSpec: INT .

    $default  reduce using rule 18 (typeSpec)


State 6

   19 typeSpec: BOOL .

    $default  reduce using rule 19 (typeSpec)


State 7

   20 typeSpec: CHAR .

    $default  reduce using rule 20 (typeSpec)


State 8

    2 precomList: precomList PRECOMPILER .

    $default  reduce using rule 2 (precomList)


State 9

   22 funDecl: ID . '(' parms ')' stmt
   25        | ID . '(' error

    '('  shift, and go to state 15


State 10

    1 program: precomList declList .
    5 declList: declList . decl

    INT   shift, and go to state 5
    BOOL  shift, and go to state 6
    CHAR  shift, and go to state 7
    ID    shift, and go to state 9

    $default  reduce using rule 1 (program)

    decl      go to state 16
    varDecl   go to state 12
    typeSpec  go to state 13
    funDecl   go to state 14


State 11

    6 declList: decl .

    $default  reduce using rule 6 (declList)


State 12

    7 decl: varDecl .

    $default  reduce using rule 7 (decl)


State 13

    9 varDecl: typeSpec . varDeclList ';'
   21 funDecl: typeSpec . ID '(' parms ')' stmt
   23        | typeSpec . error
   24        | typeSpec . ID '(' error
   26        | typeSpec . ID '(' parms ')' error

    error  shift, and go to state 17
    ID     shift, and go to state 18

    varDeclList  go to state 19
    varDeclInit  go to state 20
    varDeclId    go to state 21


State 14

    8 decl: funDecl .

    $default  reduce using rule 8 (decl)


State 15

   22 funDecl: ID '(' . parms ')' stmt
   25        | ID '(' . error

    error  shift, and go to state 22
    INT    shift, and go to state 5
    BOOL   shift, and go to state 6
    CHAR   shift, and go to state 7

    ')'  reduce using rule 28 (parms)

    typeSpec      go to state 23
    parms         go to state 24
    parmList      go to state 25
    parmTypeList  go to state 26


State 16

    5 declList: declList decl .

    $default  reduce using rule 5 (declList)


State 17

   23 funDecl: typeSpec error .

    $default  reduce using rule 23 (funDecl)


State 18

   16 varDeclId: ID .
   17          | ID . '[' NUMCONST ']'
   21 funDecl: typeSpec ID . '(' parms ')' stmt
   24        | typeSpec ID . '(' error
   26        | typeSpec ID . '(' parms ')' error

    '('  shift, and go to state 27
    '['  shift, and go to state 28

    $default  reduce using rule 16 (varDeclId)


State 19

    9 varDecl: typeSpec varDeclList . ';'
   12 varDeclList: varDeclList . ',' varDeclInit

    ','  shift, and go to state 29
    ';'  shift, and go to state 30


State 20

   13 varDeclList: varDeclInit .

    $default  reduce using rule 13 (varDeclList)


State 21

   14 varDeclInit: varDeclId .
   15            | varDeclId . ':' simpleExp

    ':'  shift, and go to state 31

    $default  reduce using rule 14 (varDeclInit)


State 22

   25 funDecl: ID '(' error .

    $default  reduce using rule 25 (funDecl)


State 23

   31 parmTypeList: typeSpec . parmIdList

    ID  shift, and go to state 32

    parmIdList  go to state 33
    parmId      go to state 34


State 24

   22 funDecl: ID '(' parms . ')' stmt

    ')'  shift, and go to state 35


State 25

   27 parms: parmList .
   29 parmList: parmList . ';' parmTypeList

    ';'  shift, and go to state 36

    $default  reduce using rule 27 (parms)


State 26

   30 parmList: parmTypeList .

    $default  reduce using rule 30 (parmList)


State 27

   21 funDecl: typeSpec ID '(' . parms ')' stmt
   24        | typeSpec ID '(' . error
   26        | typeSpec ID '(' . parms ')' error

    error  shift, and go to state 37
    INT    shift, and go to state 5
    BOOL   shift, and go to state 6
    CHAR   shift, and go to state 7

    ')'  reduce using rule 28 (parms)

    typeSpec      go to state 23
    parms         go to state 38
    parmList      go to state 25
    parmTypeList  go to state 26


State 28

   17 varDeclId: ID '[' . NUMCONST ']'

    NUMCONST  shift, and go to state 39


State 29

   12 varDeclList: varDeclList ',' . varDeclInit

    ID  shift, and go to state 40

    varDeclInit  go to state 41
    varDeclId    go to state 21


State 30

    9 varDecl: typeSpec varDeclList ';' .

    $default  reduce using rule 9 (varDecl)


State 31

   15 varDeclInit: varDeclId ':' . simpleExp

    '*'          shift, and go to state 42
    '-'          shift, and go to state 43
    '?'          shift, and go to state 44
    '('          shift, and go to state 45
    NOT          shift, and go to state 46
    ID           shift, and go to state 47
    BOOLCONST    shift, and go to state 48
    NUMCONST     shift, and go to state 49
    CHARCONST    shift, and go to state 50
    STRINGCONST  shift, and go to state 51

    simpleExp    go to state 52
    andExp       go to state 53
    unaryRelExp  go to state 54
    relExp       go to state 55
    minmaxExp    go to state 56
    sumExp       go to state 57
    mulExp       go to state 58
    unaryExp     go to state 59
    unaryop      go to state 60
    factor       go to state 61
    mutable      go to state 62
    immutable    go to state 63
    call         go to state 64
    constant     go to state 65


State 32

   34 parmId: ID .
   35       | ID . '[' ']'

    '['  shift, and go to state 66

    $default  reduce using rule 34 (parmId)


State 33

   31 parmTypeList: typeSpec parmIdList .
   32 parmIdList: parmIdList . ',' parmId

    ','  shift, and go to state 67

    $default  reduce using rule 31 (parmTypeList)


State 34

   33 parmIdList: parmId .

    $default  reduce using rule 33 (parmIdList)


State 35

   22 funDecl: ID '(' parms ')' . stmt

    '*'          shift, and go to state 42
    '-'          shift, and go to state 43
    '?'          shift, and go to state 44
    '('          shift, and go to state 45
    ';'          shift, and go to state 68
    '{'          shift, and go to state 69
    NOT          shift, and go to state 46
    BREAK        shift, and go to state 70
    FOR          shift, and go to state 71
    WHILE        shift, and go to state 72
    IF           shift, and go to state 73
    RETURN       shift, and go to state 74
    ID           shift, and go to state 47
    BOOLCONST    shift, and go to state 48
    NUMCONST     shift, and go to state 49
    CHARCONST    shift, and go to state 50
    STRINGCONST  shift, and go to state 51

    stmt          go to state 75
    matched       go to state 76
    unmatched     go to state 77
    expStmt       go to state 78
    compoundStmt  go to state 79
    returnStmt    go to state 80
    breakStmt     go to state 81
    exp           go to state 82
    simpleExp     go to state 83
    andExp        go to state 53
    unaryRelExp   go to state 54
    relExp        go to state 55
    minmaxExp     go to state 56
    sumExp        go to state 57
    mulExp        go to state 58
    unaryExp      go to state 59
    unaryop       go to state 60
    factor        go to state 61
    mutable       go to state 84
    immutable     go to state 63
    call          go to state 64
    constant      go to state 65


State 36

   29 parmList: parmList ';' . parmTypeList

    INT   shift, and go to state 5
    BOOL  shift, and go to state 6
    CHAR  shift, and go to state 7

    typeSpec      go to state 23
    parmTypeList  go to state 85


State 37

   24 funDecl: typeSpec ID '(' error .

    $default  reduce using rule 24 (funDecl)


State 38

   21 funDecl: typeSpec ID '(' parms . ')' stmt
   26        | typeSpec ID '(' parms . ')' error

    ')'  shift, and go to state 86


State 39

   17 varDeclId: ID '[' NUMCONST . ']'

    ']'  shift, and go to state 87


State 40

   16 varDeclId: ID .
   17          | ID . '[' NUMCONST ']'

    '['  shift, and go to state 28

    $default  reduce using rule 16 (varDeclId)


State 41

   12 varDeclList: varDeclList ',' varDeclInit .

    $default  reduce using rule 12 (varDeclList)


State 42

  101 unaryop: '*' .

    $default  reduce using rule 101 (unaryop)


State 43

  100 unaryop: '-' .

    $default  reduce using rule 100 (unaryop)


State 44

  102 unaryop: '?' .

    $default  reduce using rule 102 (unaryop)


State 45

  107 immutable: '(' . exp ')'
  110          | '(' . error

    error        shift, and go to state 88
    '*'          shift, and go to state 42
    '-'          shift, and go to state 43
    '?'          shift, and go to state 44
    '('          shift, and go to state 45
    NOT          shift, and go to state 46
    ID           shift, and go to state 47
    BOOLCONST    shift, and go to state 48
    NUMCONST     shift, and go to state 49
    CHARCONST    shift, and go to state 50
    STRINGCONST  shift, and go to state 51

    exp          go to state 89
    simpleExp    go to state 83
    andExp       go to state 53
    unaryRelExp  go to state 54
    relExp       go to state 55
    minmaxExp    go to state 56
    sumExp       go to state 57
    mulExp       go to state 58
    unaryExp     go to state 59
    unaryop      go to state 60
    factor       go to state 61
    mutable      go to state 84
    immutable    go to state 63
    call         go to state 64
    constant     go to state 65


State 46

   75 unaryRelExp: NOT . unaryRelExp

    '*'          shift, and go to state 42
    '-'          shift, and go to state 43
    '?'          shift, and go to state 44
    '('          shift, and go to state 45
    NOT          shift, and go to state 46
    ID           shift, and go to state 47
    BOOLCONST    shift, and go to state 48
    NUMCONST     shift, and go to state 49
    CHARCONST    shift, and go to state 50
    STRINGCONST  shift, and go to state 51

    unaryRelExp  go to state 90
    relExp       go to state 55
    minmaxExp    go to state 56
    sumExp       go to state 57
    mulExp       go to state 58
    unaryExp     go to state 59
    unaryop      go to state 60
    factor       go to state 61
    mutable      go to state 62
    immutable    go to state 63
    call         go to state 64
    constant     go to state 65


State 47

  105 mutable: ID .
  106        | ID . '[' exp ']'
  111 call: ID . '(' args ')'
  112     | ID . '(' error ')'

    '('  shift, and go to state 91
    '['  shift, and go to state 92

    $default  reduce using rule 105 (mutable)


State 48

  121 constant: BOOLCONST .

    $default  reduce using rule 121 (constant)


State 49

  118 constant: NUMCONST .

    $default  reduce using rule 118 (constant)


State 50

  119 constant: CHARCONST .

    $default  reduce using rule 119 (constant)


State 51

  120 constant: STRINGCONST .

    $default  reduce using rule 120 (constant)


State 52

   15 varDeclInit: varDeclId ':' simpleExp .
   71 simpleExp: simpleExp . OR andExp

    OR  shift, and go to state 93

    $default  reduce using rule 15 (varDeclInit)


State 53

   72 simpleExp: andExp .
   73 andExp: andExp . AND unaryRelExp

    AND  shift, and go to state 94

    $default  reduce using rule 72 (simpleExp)


State 54

   74 andExp: unaryRelExp .

    $default  reduce using rule 74 (andExp)


State 55

   76 unaryRelExp: relExp .

    $default  reduce using rule 76 (unaryRelExp)


State 56

   77 relExp: minmaxExp . relop minmaxExp
   78       | minmaxExp .
   85 minmaxExp: minmaxExp . minmaxop sumExp

    '<'  shift, and go to state 95
    '>'  shift, and go to state 96
    MAX  shift, and go to state 97
    MIN  shift, and go to state 98
    EQ   shift, and go to state 99
    NEQ  shift, and go to state 100
    GEQ  shift, and go to state 101
    LEQ  shift, and go to state 102

    $default  reduce using rule 78 (relExp)

    relop     go to state 103
    minmaxop  go to state 104


State 57

   86 minmaxExp: sumExp .
   89 sumExp: sumExp . sumop mulExp

    '+'  shift, and go to state 105
    '-'  shift, and go to state 106

    $default  reduce using rule 86 (minmaxExp)

    sumop  go to state 107


State 58

   90 sumExp: mulExp .
   93 mulExp: mulExp . mulop unaryExp

    '*'  shift, and go to state 108
    '/'  shift, and go to state 109
    '%'  shift, and go to state 110

    $default  reduce using rule 90 (sumExp)

    mulop  go to state 111


State 59

   94 mulExp: unaryExp .

    $default  reduce using rule 94 (mulExp)


State 60

   98 unaryExp: unaryop . unaryExp

    '*'          shift, and go to state 42
    '-'          shift, and go to state 43
    '?'          shift, and go to state 44
    '('          shift, and go to state 45
    ID           shift, and go to state 47
    BOOLCONST    shift, and go to state 48
    NUMCONST     shift, and go to state 49
    CHARCONST    shift, and go to state 50
    STRINGCONST  shift, and go to state 51

    unaryExp   go to state 112
    unaryop    go to state 60
    factor     go to state 61
    mutable    go to state 62
    immutable  go to state 63
    call       go to state 64
    constant   go to state 65


State 61

   99 unaryExp: factor .

    $default  reduce using rule 99 (unaryExp)


State 62

  104 factor: mutable .

    $default  reduce using rule 104 (factor)


State 63

  103 factor: immutable .

    $default  reduce using rule 103 (factor)


State 64

  108 immutable: call .

    $default  reduce using rule 108 (immutable)


State 65

  109 immutable: constant .

    $default  reduce using rule 109 (immutable)


State 66

   35 parmId: ID '[' . ']'

    ']'  shift, and go to state 113


State 67

   32 parmIdList: parmIdList ',' . parmId

    ID  shift, and go to state 32

    parmId  go to state 114


State 68

   52 expStmt: ';' .

    $default  reduce using rule 52 (expStmt)


State 69

   54 compoundStmt: '{' . localDecls stmtList '}'

    $default  reduce using rule 56 (localDecls)

    localDecls  go to state 115


State 70

   61 breakStmt: BREAK . ';'

    ';'  shift, and go to state 116


State 71

   40 matched: FOR . ID '=' iterRange DO matched
   50 unmatched: FOR . ID '=' iterRange DO unmatched

    ID  shift, and go to state 117


State 72

   39 matched: WHILE . simpleExp DO matched
   49 unmatched: WHILE . simpleExp DO unmatched

    '*'          shift, and go to state 42
    '-'          shift, and go to state 43
    '?'          shift, and go to state 44
    '('          shift, and go to state 45
    NOT          shift, and go to state 46
    ID           shift, and go to state 47
    BOOLCONST    shift, and go to state 48
    NUMCONST     shift, and go to state 49
    CHARCONST    shift, and go to state 50
    STRINGCONST  shift, and go to state 51

    simpleExp    go to state 118
    andExp       go to state 53
    unaryRelExp  go to state 54
    relExp       go to state 55
    minmaxExp    go to state 56
    sumExp       go to state 57
    mulExp       go to state 58
    unaryExp     go to state 59
    unaryop      go to state 60
    factor       go to state 61
    mutable      go to state 62
    immutable    go to state 63
    call         go to state 64
    constant     go to state 65


State 73

   38 matched: IF . simpleExp THEN matched ELSE matched
   47 unmatched: IF . simpleExp THEN stmt
   48          | IF . simpleExp THEN matched ELSE unmatched

    '*'          shift, and go to state 42
    '-'          shift, and go to state 43
    '?'          shift, and go to state 44
    '('          shift, and go to state 45
    NOT          shift, and go to state 46
    ID           shift, and go to state 47
    BOOLCONST    shift, and go to state 48
    NUMCONST     shift, and go to state 49
    CHARCONST    shift, and go to state 50
    STRINGCONST  shift, and go to state 51

    simpleExp    go to state 119
    andExp       go to state 53
    unaryRelExp  go to state 54
    relExp       go to state 55
    minmaxExp    go to state 56
    sumExp       go to state 57
    mulExp       go to state 58
    unaryExp     go to state 59
    unaryop      go to state 60
    factor       go to state 61
    mutable      go to state 62
    immutable    go to state 63
    call         go to state 64
    constant     go to state 65


State 74

   59 returnStmt: RETURN . ';'
   60           | RETURN . exp ';'

    '*'          shift, and go to state 42
    '-'          shift, and go to state 43
    '?'          shift, and go to state 44
    '('          shift, and go to state 45
    ';'          shift, and go to state 120
    NOT          shift, and go to state 46
    ID           shift, and go to state 47
    BOOLCONST    shift, and go to state 48
    NUMCONST     shift, and go to state 49
    CHARCONST    shift, and go to state 50
    STRINGCONST  shift, and go to state 51

    exp          go to state 121
    simpleExp    go to state 83
    andExp       go to state 53
    unaryRelExp  go to state 54
    relExp       go to state 55
    minmaxExp    go to state 56
    sumExp       go to state 57
    mulExp       go to state 58
    unaryExp     go to state 59
    unaryop      go to state 60
    factor       go to state 61
    mutable      go to state 84
    immutable    go to state 63
    call         go to state 64
    constant     go to state 65


State 75

   22 funDecl: ID '(' parms ')' stmt .

    $default  reduce using rule 22 (funDecl)


State 76

   36 stmt: matched .

    $default  reduce using rule 36 (stmt)


State 77

   37 stmt: unmatched .

    $default  reduce using rule 37 (stmt)


State 78

   41 matched: expStmt .

    $default  reduce using rule 41 (matched)


State 79

   42 matched: compoundStmt .

    $default  reduce using rule 42 (matched)


State 80

   43 matched: returnStmt .

    $default  reduce using rule 43 (matched)


State 81

   44 matched: breakStmt .

    $default  reduce using rule 44 (matched)


State 82

   51 expStmt: exp . ';'
   53        | exp . error

    error  shift, and go to state 122
    ';'    shift, and go to state 123


State 83

   65 exp: simpleExp .
   71 simpleExp: simpleExp . OR andExp

    OR  shift, and go to state 93

    $default  reduce using rule 65 (exp)


State 84

   62 exp: mutable . assignop exp
   63    | mutable . INC
   64    | mutable . DEC
  104 factor: mutable .

    '='     shift, and go to state 124
    ADDASS  shift, and go to state 125
    SUBASS  shift, and go to state 126
    MULASS  shift, and go to state 127
    DIVASS  shift, and go to state 128
    INC     shift, and go to state 129
    DEC     shift, and go to state 130

    $default  reduce using rule 104 (factor)

    assignop  go to state 131


State 85

   29 parmList: parmList ';' parmTypeList .

    $default  reduce using rule 29 (parmList)


State 86

   21 funDecl: typeSpec ID '(' parms ')' . stmt
   26        | typeSpec ID '(' parms ')' . error

    error        shift, and go to state 132
    '*'          shift, and go to state 42
    '-'          shift, and go to state 43
    '?'          shift, and go to state 44
    '('          shift, and go to state 45
    ';'          shift, and go to state 68
    '{'          shift, and go to state 69
    NOT          shift, and go to state 46
    BREAK        shift, and go to state 70
    FOR          shift, and go to state 71
    WHILE        shift, and go to state 72
    IF           shift, and go to state 73
    RETURN       shift, and go to state 74
    ID           shift, and go to state 47
    BOOLCONST    shift, and go to state 48
    NUMCONST     shift, and go to state 49
    CHARCONST    shift, and go to state 50
    STRINGCONST  shift, and go to state 51

    stmt          go to state 133
    matched       go to state 76
    unmatched     go to state 77
    expStmt       go to state 78
    compoundStmt  go to state 79
    returnStmt    go to state 80
    breakStmt     go to state 81
    exp           go to state 82
    simpleExp     go to state 83
    andExp        go to state 53
    unaryRelExp   go to state 54
    relExp        go to state 55
    minmaxExp     go to state 56
    sumExp        go to state 57
    mulExp        go to state 58
    unaryExp      go to state 59
    unaryop       go to state 60
    factor        go to state 61
    mutable       go to state 84
    immutable     go to state 63
    call          go to state 64
    constant      go to state 65


State 87

   17 varDeclId: ID '[' NUMCONST ']' .

    $default  reduce using rule 17 (varDeclId)


State 88

  110 immutable: '(' error .

    $default  reduce using rule 110 (immutable)


State 89

  107 immutable: '(' exp . ')'

    ')'  shift, and go to state 134


State 90

   75 unaryRelExp: NOT unaryRelExp .

    $default  reduce using rule 75 (unaryRelExp)


State 91

  111 call: ID '(' . args ')'
  112     | ID '(' . error ')'

    error        shift, and go to state 135
    '*'          shift, and go to state 42
    '-'          shift, and go to state 43
    '?'          shift, and go to state 44
    '('          shift, and go to state 45
    NOT          shift, and go to state 46
    ID           shift, and go to state 47
    BOOLCONST    shift, and go to state 48
    NUMCONST     shift, and go to state 49
    CHARCONST    shift, and go to state 50
    STRINGCONST  shift, and go to state 51

    ')'  reduce using rule 114 (args)

    exp          go to state 136
    simpleExp    go to state 83
    andExp       go to state 53
    unaryRelExp  go to state 54
    relExp       go to state 55
    minmaxExp    go to state 56
    sumExp       go to state 57
    mulExp       go to state 58
    unaryExp     go to state 59
    unaryop      go to state 60
    factor       go to state 61
    mutable      go to state 84
    immutable    go to state 63
    call         go to state 64
    args         go to state 137
    argList      go to state 138
    constant     go to state 65


State 92

  106 mutable: ID '[' . exp ']'

    '*'          shift, and go to state 42
    '-'          shift, and go to state 43
    '?'          shift, and go to state 44
    '('          shift, and go to state 45
    NOT          shift, and go to state 46
    ID           shift, and go to state 47
    BOOLCONST    shift, and go to state 48
    NUMCONST     shift, and go to state 49
    CHARCONST    shift, and go to state 50
    STRINGCONST  shift, and go to state 51

    exp          go to state 139
    simpleExp    go to state 83
    andExp       go to state 53
    unaryRelExp  go to state 54
    relExp       go to state 55
    minmaxExp    go to state 56
    sumExp       go to state 57
    mulExp       go to state 58
    unaryExp     go to state 59
    unaryop      go to state 60
    factor       go to state 61
    mutable      go to state 84
    immutable    go to state 63
    call         go to state 64
    constant     go to state 65


State 93

   71 simpleExp: simpleExp OR . andExp

    '*'          shift, and go to state 42
    '-'          shift, and go to state 43
    '?'          shift, and go to state 44
    '('          shift, and go to state 45
    NOT          shift, and go to state 46
    ID           shift, and go to state 47
    BOOLCONST    shift, and go to state 48
    NUMCONST     shift, and go to state 49
    CHARCONST    shift, and go to state 50
    STRINGCONST  shift, and go to state 51

    andExp       go to state 140
    unaryRelExp  go to state 54
    relExp       go to state 55
    minmaxExp    go to state 56
    sumExp       go to state 57
    mulExp       go to state 58
    unaryExp     go to state 59
    unaryop      go to state 60
    factor       go to state 61
    mutable      go to state 62
    immutable    go to state 63
    call         go to state 64
    constant     go to state 65


State 94

   73 andExp: andExp AND . unaryRelExp

    '*'          shift, and go to state 42
    '-'          shift, and go to state 43
    '?'          shift, and go to state 44
    '('          shift, and go to state 45
    NOT          shift, and go to state 46
    ID           shift, and go to state 47
    BOOLCONST    shift, and go to state 48
    NUMCONST     shift, and go to state 49
    CHARCONST    shift, and go to state 50
    STRINGCONST  shift, and go to state 51

    unaryRelExp  go to state 141
    relExp       go to state 55
    minmaxExp    go to state 56
    sumExp       go to state 57
    mulExp       go to state 58
    unaryExp     go to state 59
    unaryop      go to state 60
    factor       go to state 61
    mutable      go to state 62
    immutable    go to state 63
    call         go to state 64
    constant     go to state 65


State 95

   80 relop: '<' .

    $default  reduce using rule 80 (relop)


State 96

   81 relop: '>' .

    $default  reduce using rule 81 (relop)


State 97

   87 minmaxop: MAX .

    $default  reduce using rule 87 (minmaxop)


State 98

   88 minmaxop: MIN .

    $default  reduce using rule 88 (minmaxop)


State 99

   83 relop: EQ .

    $default  reduce using rule 83 (relop)


State 100

   84 relop: NEQ .

    $default  reduce using rule 84 (relop)


State 101

   82 relop: GEQ .

    $default  reduce using rule 82 (relop)


State 102

   79 relop: LEQ .

    $default  reduce using rule 79 (relop)


State 103

   77 relExp: minmaxExp relop . minmaxExp

    '*'          shift, and go to state 42
    '-'          shift, and go to state 43
    '?'          shift, and go to state 44
    '('          shift, and go to state 45
    ID           shift, and go to state 47
    BOOLCONST    shift, and go to state 48
    NUMCONST     shift, and go to state 49
    CHARCONST    shift, and go to state 50
    STRINGCONST  shift, and go to state 51

    minmaxExp  go to state 142
    sumExp     go to state 57
    mulExp     go to state 58
    unaryExp   go to state 59
    unaryop    go to state 60
    factor     go to state 61
    mutable    go to state 62
    immutable  go to state 63
    call       go to state 64
    constant   go to state 65


State 104

   85 minmaxExp: minmaxExp minmaxop . sumExp

    '*'          shift, and go to state 42
    '-'          shift, and go to state 43
    '?'          shift, and go to state 44
    '('          shift, and go to state 45
    ID           shift, and go to state 47
    BOOLCONST    shift, and go to state 48
    NUMCONST     shift, and go to state 49
    CHARCONST    shift, and go to state 50
    STRINGCONST  shift, and go to state 51

    sumExp     go to state 143
    mulExp     go to state 58
    unaryExp   go to state 59
    unaryop    go to state 60
    factor     go to state 61
    mutable    go to state 62
    immutable  go to state 63
    call       go to state 64
    constant   go to state 65


State 105

   91 sumop: '+' .

    $default  reduce using rule 91 (sumop)


State 106

   92 sumop: '-' .

    $default  reduce using rule 92 (sumop)


State 107

   89 sumExp: sumExp sumop . mulExp

    '*'          shift, and go to state 42
    '-'          shift, and go to state 43
    '?'          shift, and go to state 44
    '('          shift, and go to state 45
    ID           shift, and go to state 47
    BOOLCONST    shift, and go to state 48
    NUMCONST     shift, and go to state 49
    CHARCONST    shift, and go to state 50
    STRINGCONST  shift, and go to state 51

    mulExp     go to state 144
    unaryExp   go to state 59
    unaryop    go to state 60
    factor     go to state 61
    mutable    go to state 62
    immutable  go to state 63
    call       go to state 64
    constant   go to state 65


State 108

   95 mulop: '*' .

    $default  reduce using rule 95 (mulop)


State 109

   96 mulop: '/' .

    $default  reduce using rule 96 (mulop)


State 110

   97 mulop: '%' .

    $default  reduce using rule 97 (mulop)


State 111

   93 mulExp: mulExp mulop . unaryExp

    '*'          shift, and go to state 42
    '-'          shift, and go to state 43
    '?'          shift, and go to state 44
    '('          shift, and go to state 45
    ID           shift, and go to state 47
    BOOLCONST    shift, and go to state 48
    NUMCONST     shift, and go to state 49
    CHARCONST    shift, and go to state 50
    STRINGCONST  shift, and go to state 51

    unaryExp   go to state 145
    unaryop    go to state 60
    factor     go to state 61
    mutable    go to state 62
    immutable  go to state 63
    call       go to state 64
    constant   go to state 65


State 112

   98 unaryExp: unaryop unaryExp .

    $default  reduce using rule 98 (unaryExp)


State 113

   35 parmId: ID '[' ']' .

    $default  reduce using rule 35 (parmId)


State 114

   32 parmIdList: parmIdList ',' parmId .

    $default  reduce using rule 32 (parmIdList)


State 115

   54 compoundStmt: '{' localDecls . stmtList '}'
   55 localDecls: localDecls . scopedVarDecl

    INT     shift, and go to state 5
    BOOL    shift, and go to state 6
    CHAR    shift, and go to state 7
    STATIC  shift, and go to state 146

    $default  reduce using rule 58 (stmtList)

    scopedVarDecl  go to state 147
    typeSpec       go to state 148
    stmtList       go to state 149


State 116

   61 breakStmt: BREAK ';' .

    $default  reduce using rule 61 (breakStmt)


State 117

   40 matched: FOR ID . '=' iterRange DO matched
   50 unmatched: FOR ID . '=' iterRange DO unmatched

    '='  shift, and go to state 150


State 118

   39 matched: WHILE simpleExp . DO matched
   49 unmatched: WHILE simpleExp . DO unmatched
   71 simpleExp: simpleExp . OR andExp

    OR  shift, and go to state 93
    DO  shift, and go to state 151


State 119

   38 matched: IF simpleExp . THEN matched ELSE matched
   47 unmatched: IF simpleExp . THEN stmt
   48          | IF simpleExp . THEN matched ELSE unmatched
   71 simpleExp: simpleExp . OR andExp

    OR    shift, and go to state 93
    THEN  shift, and go to state 152


State 120

   59 returnStmt: RETURN ';' .

    $default  reduce using rule 59 (returnStmt)


State 121

   60 returnStmt: RETURN exp . ';'

    ';'  shift, and go to state 153


State 122

   53 expStmt: exp error .

    $default  reduce using rule 53 (expStmt)


State 123

   51 expStmt: exp ';' .

    $default  reduce using rule 51 (expStmt)


State 124

   66 assignop: '=' .

    $default  reduce using rule 66 (assignop)


State 125

   67 assignop: ADDASS .

    $default  reduce using rule 67 (assignop)


State 126

   68 assignop: SUBASS .

    $default  reduce using rule 68 (assignop)


State 127

   69 assignop: MULASS .

    $default  reduce using rule 69 (assignop)


State 128

   70 assignop: DIVASS .

    $default  reduce using rule 70 (assignop)


State 129

   63 exp: mutable INC .

    $default  reduce using rule 63 (exp)


State 130

   64 exp: mutable DEC .

    $default  reduce using rule 64 (exp)


State 131

   62 exp: mutable assignop . exp

    '*'          shift, and go to state 42
    '-'          shift, and go to state 43
    '?'          shift, and go to state 44
    '('          shift, and go to state 45
    NOT          shift, and go to state 46
    ID           shift, and go to state 47
    BOOLCONST    shift, and go to state 48
    NUMCONST     shift, and go to state 49
    CHARCONST    shift, and go to state 50
    STRINGCONST  shift, and go to state 51

    exp          go to state 154
    simpleExp    go to state 83
    andExp       go to state 53
    unaryRelExp  go to state 54
    relExp       go to state 55
    minmaxExp    go to state 56
    sumExp       go to state 57
    mulExp       go to state 58
    unaryExp     go to state 59
    unaryop      go to state 60
    factor       go to state 61
    mutable      go to state 84
    immutable    go to state 63
    call         go to state 64
    constant     go to state 65


State 132

   26 funDecl: typeSpec ID '(' parms ')' error .

    $default  reduce using rule 26 (funDecl)


State 133

   21 funDecl: typeSpec ID '(' parms ')' stmt .

    $default  reduce using rule 21 (funDecl)


State 134

  107 immutable: '(' exp ')' .

    $default  reduce using rule 107 (immutable)


State 135

  112 call: ID '(' error . ')'

    ')'  shift, and go to state 155


State 136

  116 argList: exp .

    $default  reduce using rule 116 (argList)


State 137

  111 call: ID '(' args . ')'

    ')'  shift, and go to state 156


State 138

  113 args: argList .
  115 argList: argList . ',' exp
  117        | argList . ',' error

    ','  shift, and go to state 157

    $default  reduce using rule 113 (args)


State 139

  106 mutable: ID '[' exp . ']'

    ']'  shift, and go to state 158


State 140

   71 simpleExp: simpleExp OR andExp .
   73 andExp: andExp . AND unaryRelExp

    AND  shift, and go to state 94

    $default  reduce using rule 71 (simpleExp)


State 141

   73 andExp: andExp AND unaryRelExp .

    $default  reduce using rule 73 (andExp)


State 142

   77 relExp: minmaxExp relop minmaxExp .
   85 minmaxExp: minmaxExp . minmaxop sumExp

    MAX  shift, and go to state 97
    MIN  shift, and go to state 98

    $default  reduce using rule 77 (relExp)

    minmaxop  go to state 104


State 143

   85 minmaxExp: minmaxExp minmaxop sumExp .
   89 sumExp: sumExp . sumop mulExp

    '+'  shift, and go to state 105
    '-'  shift, and go to state 106

    $default  reduce using rule 85 (minmaxExp)

    sumop  go to state 107


State 144

   89 sumExp: sumExp sumop mulExp .
   93 mulExp: mulExp . mulop unaryExp

    '*'  shift, and go to state 108
    '/'  shift, and go to state 109
    '%'  shift, and go to state 110

    $default  reduce using rule 89 (sumExp)

    mulop  go to state 111


State 145

   93 mulExp: mulExp mulop unaryExp .

    $default  reduce using rule 93 (mulExp)


State 146

   10 scopedVarDecl: STATIC . typeSpec varDeclList ';'

    INT   shift, and go to state 5
    BOOL  shift, and go to state 6
    CHAR  shift, and go to state 7

    typeSpec  go to state 159


State 147

   55 localDecls: localDecls scopedVarDecl .

    $default  reduce using rule 55 (localDecls)


State 148

   11 scopedVarDecl: typeSpec . varDeclList ';'

    ID  shift, and go to state 40

    varDeclList  go to state 160
    varDeclInit  go to state 20
    varDeclId    go to state 21


State 149

   54 compoundStmt: '{' localDecls stmtList . '}'
   57 stmtList: stmtList . stmt

    '*'          shift, and go to state 42
    '-'          shift, and go to state 43
    '?'          shift, and go to state 44
    '('          shift, and go to state 45
    ';'          shift, and go to state 68
    '{'          shift, and go to state 69
    '}'          shift, and go to state 161
    NOT          shift, and go to state 46
    BREAK        shift, and go to state 70
    FOR          shift, and go to state 71
    WHILE        shift, and go to state 72
    IF           shift, and go to state 73
    RETURN       shift, and go to state 74
    ID           shift, and go to state 47
    BOOLCONST    shift, and go to state 48
    NUMCONST     shift, and go to state 49
    CHARCONST    shift, and go to state 50
    STRINGCONST  shift, and go to state 51

    stmt          go to state 162
    matched       go to state 76
    unmatched     go to state 77
    expStmt       go to state 78
    compoundStmt  go to state 79
    returnStmt    go to state 80
    breakStmt     go to state 81
    exp           go to state 82
    simpleExp     go to state 83
    andExp        go to state 53
    unaryRelExp   go to state 54
    relExp        go to state 55
    minmaxExp     go to state 56
    sumExp        go to state 57
    mulExp        go to state 58
    unaryExp      go to state 59
    unaryop       go to state 60
    factor        go to state 61
    mutable       go to state 84
    immutable     go to state 63
    call          go to state 64
    constant      go to state 65


State 150

   40 matched: FOR ID '=' . iterRange DO matched
   50 unmatched: FOR ID '=' . iterRange DO unmatched

    '*'          shift, and go to state 42
    '-'          shift, and go to state 43
    '?'          shift, and go to state 44
    '('          shift, and go to state 45
    NOT          shift, and go to state 46
    ID           shift, and go to state 47
    BOOLCONST    shift, and go to state 48
    NUMCONST     shift, and go to state 49
    CHARCONST    shift, and go to state 50
    STRINGCONST  shift, and go to state 51

    iterRange    go to state 163
    simpleExp    go to state 164
    andExp       go to state 53
    unaryRelExp  go to state 54
    relExp       go to state 55
    minmaxExp    go to state 56
    sumExp       go to state 57
    mulExp       go to state 58
    unaryExp     go to state 59
    unaryop      go to state 60
    factor       go to state 61
    mutable      go to state 62
    immutable    go to state 63
    call         go to state 64
    constant     go to state 65


State 151

   39 matched: WHILE simpleExp DO . matched
   49 unmatched: WHILE simpleExp DO . unmatched

    '*'          shift, and go to state 42
    '-'          shift, and go to state 43
    '?'          shift, and go to state 44
    '('          shift, and go to state 45
    ';'          shift, and go to state 68
    '{'          shift, and go to state 69
    NOT          shift, and go to state 46
    BREAK        shift, and go to state 70
    FOR          shift, and go to state 71
    WHILE        shift, and go to state 72
    IF           shift, and go to state 73
    RETURN       shift, and go to state 74
    ID           shift, and go to state 47
    BOOLCONST    shift, and go to state 48
    NUMCONST     shift, and go to state 49
    CHARCONST    shift, and go to state 50
    STRINGCONST  shift, and go to state 51

    matched       go to state 165
    unmatched     go to state 166
    expStmt       go to state 78
    compoundStmt  go to state 79
    returnStmt    go to state 80
    breakStmt     go to state 81
    exp           go to state 82
    simpleExp     go to state 83
    andExp        go to state 53
    unaryRelExp   go to state 54
    relExp        go to state 55
    minmaxExp     go to state 56
    sumExp        go to state 57
    mulExp        go to state 58
    unaryExp      go to state 59
    unaryop       go to state 60
    factor        go to state 61
    mutable       go to state 84
    immutable     go to state 63
    call          go to state 64
    constant      go to state 65


State 152

   38 matched: IF simpleExp THEN . matched ELSE matched
   47 unmatched: IF simpleExp THEN . stmt
   48          | IF simpleExp THEN . matched ELSE unmatched

    '*'          shift, and go to state 42
    '-'          shift, and go to state 43
    '?'          shift, and go to state 44
    '('          shift, and go to state 45
    ';'          shift, and go to state 68
    '{'          shift, and go to state 69
    NOT          shift, and go to state 46
    BREAK        shift, and go to state 70
    FOR          shift, and go to state 71
    WHILE        shift, and go to state 72
    IF           shift, and go to state 73
    RETURN       shift, and go to state 74
    ID           shift, and go to state 47
    BOOLCONST    shift, and go to state 48
    NUMCONST     shift, and go to state 49
    CHARCONST    shift, and go to state 50
    STRINGCONST  shift, and go to state 51

    stmt          go to state 167
    matched       go to state 168
    unmatched     go to state 77
    expStmt       go to state 78
    compoundStmt  go to state 79
    returnStmt    go to state 80
    breakStmt     go to state 81
    exp           go to state 82
    simpleExp     go to state 83
    andExp        go to state 53
    unaryRelExp   go to state 54
    relExp        go to state 55
    minmaxExp     go to state 56
    sumExp        go to state 57
    mulExp        go to state 58
    unaryExp      go to state 59
    unaryop       go to state 60
    factor        go to state 61
    mutable       go to state 84
    immutable     go to state 63
    call          go to state 64
    constant      go to state 65


State 153

   60 returnStmt: RETURN exp ';' .

    $default  reduce using rule 60 (returnStmt)


State 154

   62 exp: mutable assignop exp .

    $default  reduce using rule 62 (exp)


State 155

  112 call: ID '(' error ')' .

    $default  reduce using rule 112 (call)


State 156

  111 call: ID '(' args ')' .

    $default  reduce using rule 111 (call)


State 157

  115 argList: argList ',' . exp
  117        | argList ',' . error

    error        shift, and go to state 169
    '*'          shift, and go to state 42
    '-'          shift, and go to state 43
    '?'          shift, and go to state 44
    '('          shift, and go to state 45
    NOT          shift, and go to state 46
    ID           shift, and go to state 47
    BOOLCONST    shift, and go to state 48
    NUMCONST     shift, and go to state 49
    CHARCONST    shift, and go to state 50
    STRINGCONST  shift, and go to state 51

    exp          go to state 170
    simpleExp    go to state 83
    andExp       go to state 53
    unaryRelExp  go to state 54
    relExp       go to state 55
    minmaxExp    go to state 56
    sumExp       go to state 57
    mulExp       go to state 58
    unaryExp     go to state 59
    unaryop      go to state 60
    factor       go to state 61
    mutable      go to state 84
    immutable    go to state 63
    call         go to state 64
    constant     go to state 65


State 158

  106 mutable: ID '[' exp ']' .

    $default  reduce using rule 106 (mutable)


State 159

   10 scopedVarDecl: STATIC typeSpec . varDeclList ';'

    ID  shift, and go to state 40

    varDeclList  go to state 171
    varDeclInit  go to state 20
    varDeclId    go to state 21


State 160

   11 scopedVarDecl: typeSpec varDeclList . ';'
   12 varDeclList: varDeclList . ',' varDeclInit

    ','  shift, and go to state 29
    ';'  shift, and go to state 172


State 161

   54 compoundStmt: '{' localDecls stmtList '}' .

    $default  reduce using rule 54 (compoundStmt)


State 162

   57 stmtList: stmtList stmt .

    $default  reduce using rule 57 (stmtList)


State 163

   40 matched: FOR ID '=' iterRange . DO matched
   50 unmatched: FOR ID '=' iterRange . DO unmatched

    DO  shift, and go to state 173


State 164

   45 iterRange: simpleExp . TO simpleExp
   46          | simpleExp . TO simpleExp BY simpleExp
   71 simpleExp: simpleExp . OR andExp

    OR  shift, and go to state 93
    TO  shift, and go to state 174


State 165

   39 matched: WHILE simpleExp DO matched .

    $default  reduce using rule 39 (matched)


State 166

   49 unmatched: WHILE simpleExp DO unmatched .

    $default  reduce using rule 49 (unmatched)


State 167

   47 unmatched: IF simpleExp THEN stmt .

    $default  reduce using rule 47 (unmatched)


State 168

   36 stmt: matched .
   38 matched: IF simpleExp THEN matched . ELSE matched
   48 unmatched: IF simpleExp THEN matched . ELSE unmatched

    ELSE  shift, and go to state 175

    $default  reduce using rule 36 (stmt)


State 169

  117 argList: argList ',' error .

    $default  reduce using rule 117 (argList)


State 170

  115 argList: argList ',' exp .

    $default  reduce using rule 115 (argList)


State 171

   10 scopedVarDecl: STATIC typeSpec varDeclList . ';'
   12 varDeclList: varDeclList . ',' varDeclInit

    ','  shift, and go to state 29
    ';'  shift, and go to state 176


State 172

   11 scopedVarDecl: typeSpec varDeclList ';' .

    $default  reduce using rule 11 (scopedVarDecl)


State 173

   40 matched: FOR ID '=' iterRange DO . matched
   50 unmatched: FOR ID '=' iterRange DO . unmatched

    '*'          shift, and go to state 42
    '-'          shift, and go to state 43
    '?'          shift, and go to state 44
    '('          shift, and go to state 45
    ';'          shift, and go to state 68
    '{'          shift, and go to state 69
    NOT          shift, and go to state 46
    BREAK        shift, and go to state 70
    FOR          shift, and go to state 71
    WHILE        shift, and go to state 72
    IF           shift, and go to state 73
    RETURN       shift, and go to state 74
    ID           shift, and go to state 47
    BOOLCONST    shift, and go to state 48
    NUMCONST     shift, and go to state 49
    CHARCONST    shift, and go to state 50
    STRINGCONST  shift, and go to state 51

    matched       go to state 177
    unmatched     go to state 178
    expStmt       go to state 78
    compoundStmt  go to state 79
    returnStmt    go to state 80
    breakStmt     go to state 81
    exp           go to state 82
    simpleExp     go to state 83
    andExp        go to state 53
    unaryRelExp   go to state 54
    relExp        go to state 55
    minmaxExp     go to state 56
    sumExp        go to state 57
    mulExp        go to state 58
    unaryExp      go to state 59
    unaryop       go to state 60
    factor        go to state 61
    mutable       go to state 84
    immutable     go to state 63
    call          go to state 64
    constant      go to state 65


State 174

   45 iterRange: simpleExp TO . simpleExp
   46          | simpleExp TO . simpleExp BY simpleExp

    '*'          shift, and go to state 42
    '-'          shift, and go to state 43
    '?'          shift, and go to state 44
    '('          shift, and go to state 45
    NOT          shift, and go to state 46
    ID           shift, and go to state 47
    BOOLCONST    shift, and go to state 48
    NUMCONST     shift, and go to state 49
    CHARCONST    shift, and go to state 50
    STRINGCONST  shift, and go to state 51

    simpleExp    go to state 179
    andExp       go to state 53
    unaryRelExp  go to state 54
    relExp       go to state 55
    minmaxExp    go to state 56
    sumExp       go to state 57
    mulExp       go to state 58
    unaryExp     go to state 59
    unaryop      go to state 60
    factor       go to state 61
    mutable      go to state 62
    immutable    go to state 63
    call         go to state 64
    constant     go to state 65


State 175

   38 matched: IF simpleExp THEN matched ELSE . matched
   48 unmatched: IF simpleExp THEN matched ELSE . unmatched

    '*'          shift, and go to state 42
    '-'          shift, and go to state 43
    '?'          shift, and go to state 44
    '('          shift, and go to state 45
    ';'          shift, and go to state 68
    '{'          shift, and go to state 69
    NOT          shift, and go to state 46
    BREAK        shift, and go to state 70
    FOR          shift, and go to state 71
    WHILE        shift, and go to state 72
    IF           shift, and go to state 73
    RETURN       shift, and go to state 74
    ID           shift, and go to state 47
    BOOLCONST    shift, and go to state 48
    NUMCONST     shift, and go to state 49
    CHARCONST    shift, and go to state 50
    STRINGCONST  shift, and go to state 51

    matched       go to state 180
    unmatched     go to state 181
    expStmt       go to state 78
    compoundStmt  go to state 79
    returnStmt    go to state 80
    breakStmt     go to state 81
    exp           go to state 82
    simpleExp     go to state 83
    andExp        go to state 53
    unaryRelExp   go to state 54
    relExp        go to state 55
    minmaxExp     go to state 56
    sumExp        go to state 57
    mulExp        go to state 58
    unaryExp      go to state 59
    unaryop       go to state 60
    factor        go to state 61
    mutable       go to state 84
    immutable     go to state 63
    call          go to state 64
    constant      go to state 65


State 176

   10 scopedVarDecl: STATIC typeSpec varDeclList ';' .

    $default  reduce using rule 10 (scopedVarDecl)


State 177

   40 matched: FOR ID '=' iterRange DO matched .

    $default  reduce using rule 40 (matched)


State 178

   50 unmatched: FOR ID '=' iterRange DO unmatched .

    $default  reduce using rule 50 (unmatched)


State 179

   45 iterRange: simpleExp TO simpleExp .
   46          | simpleExp TO simpleExp . BY simpleExp
   71 simpleExp: simpleExp . OR andExp

    OR  shift, and go to state 93
    BY  shift, and go to state 182

    $default  reduce using rule 45 (iterRange)


State 180

   38 matched: IF simpleExp THEN matched ELSE matched .

    $default  reduce using rule 38 (matched)


State 181

   48 unmatched: IF simpleExp THEN matched ELSE unmatched .

    $default  reduce using rule 48 (unmatched)


State 182

   46 iterRange: simpleExp TO simpleExp BY . simpleExp

    '*'          shift, and go to state 42
    '-'          shift, and go to state 43
    '?'          shift, and go to state 44
    '('          shift, and go to state 45
    NOT          shift, and go to state 46
    ID           shift, and go to state 47
    BOOLCONST    shift, and go to state 48
    NUMCONST     shift, and go to state 49
    CHARCONST    shift, and go to state 50
    STRINGCONST  shift, and go to state 51

    simpleExp    go to state 183
    andExp       go to state 53
    unaryRelExp  go to state 54
    relExp       go to state 55
    minmaxExp    go to state 56
    sumExp       go to state 57
    mulExp       go to state 58
    unaryExp     go to state 59
    unaryop      go to state 60
    factor       go to state 61
    mutable      go to state 62
    immutable    go to state 63
    call         go to state 64
    constant     go to state 65


State 183

   46 iterRange: simpleExp TO simpleExp BY simpleExp .
   71 simpleExp: simpleExp . OR andExp

    OR  shift, and go to state 93

    $default  reduce using rule 46 (iterRange)
